/* === ANIMACIONES GLOBALES === */

/* NOTA: Este archivo contiene todas las animaciones del juego organizadas por categorías.
   Las animaciones se han movido desde styles.css para mejor mantenimiento y organización.
   
   ORGANIZACIÓN:
   - Animaciones globales (fadeIn, slideIn, bounce, etc.)
   - Animaciones de elementos específicos (buttons, modals, etc.)
   - Animaciones del dado (rolling, landing, glow)
   - Animaciones del tablero (movement, indicators)
   - Animaciones de preguntas y respuestas
   - Animaciones del modo desafío
   - Animaciones de supervivencia y game over
   - Efectos de partículas y celebración
   - Optimizaciones y responsive animations
   
   Todas las animaciones respetan las preferencias de accesibilidad del usuario.
*/
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-20px);
    }
}

@keyframes slideInFromLeft {
    from {
        opacity: 0;
        transform: translateX(-100px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInFromRight {
    from {
        opacity: 0;
        transform: translateX(100px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

@keyframes glow {
    0%, 100% {
        box-shadow: 0 0 5px rgba(102, 126, 234, 0.5);
    }
    50% {
        box-shadow: 0 0 20px rgba(102, 126, 234, 0.8);
    }
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* === ANIMACIONES DE ELEMENTOS === */

/* Animación del título principal */
.game-title {
    animation: fadeIn 1s ease-out, pulse 2s ease-in-out infinite 2s;
}

/* Animaciones de botones */
.btn {
    animation: fadeIn 0.6s ease-out;
}

.btn:nth-child(1) { animation-delay: 0.1s; }
.btn:nth-child(2) { animation-delay: 0.2s; }
.btn:nth-child(3) { animation-delay: 0.3s; }
.btn:nth-child(4) { animation-delay: 0.4s; }

.btn:active {
    animation: bounce 0.3s ease;
}

/* === ANIMACIONES MEJORADAS DEL DADO === */

/* Animación principal de lanzamiento */
.dice.rolling {
    animation: diceRollSuspense 2.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transform-style: preserve-3d;
}

/* Animación de aterrizaje con rebote */
.dice.landed {
    animation: diceLanded 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* Efecto de brillo al finalizar - SUAVIZADO */
.dice.glowing {
    animation: diceGlow 0.8s ease-in-out;
    /* Reducido el brillo para que no sea molesto */
    box-shadow: 0 0 10px rgba(102, 126, 234, 0.6), 0 0 20px rgba(102, 126, 234, 0.4);
}

/* Animaciones de suspense del contenedor */
.dice-container.rolling {
    animation: containerShake 2.5s ease-in-out;
}

/* Keyframes para animación compleja del dado */
@keyframes diceRollSuspense {
    0% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    10% {
        transform: rotateX(180deg) rotateY(90deg) rotateZ(45deg) scale(1.1);
        box-shadow: 0 8px 16px rgba(0,0,0,0.3);
    }
    25% {
        transform: rotateX(360deg) rotateY(180deg) rotateZ(90deg) scale(1.2);
        box-shadow: 0 12px 24px rgba(0,0,0,0.4);
    }
    50% {
        transform: rotateX(540deg) rotateY(360deg) rotateZ(180deg) scale(1.15);
        box-shadow: 0 16px 32px rgba(0,0,0,0.5);
    }
    75% {
        transform: rotateX(720deg) rotateY(540deg) rotateZ(270deg) scale(1.1);
        box-shadow: 0 12px 24px rgba(0,0,0,0.4);
    }
    90% {
        transform: rotateX(900deg) rotateY(720deg) rotateZ(360deg) scale(1.05);
        box-shadow: 0 8px 16px rgba(0,0,0,0.3);
    }
    100% {
        transform: rotateX(1080deg) rotateY(900deg) rotateZ(450deg) scale(1);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
}

/* Keyframes para aterrizaje dramático */
@keyframes diceLanded {
    0% {
        transform: scale(1) rotateZ(450deg);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    20% {
        transform: scale(1.3) rotateZ(360deg);
        box-shadow: 0 20px 40px rgba(0,0,0,0.6);
    }
    40% {
        transform: scale(0.8) rotateZ(360deg);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    60% {
        transform: scale(1.1) rotateZ(360deg);
        box-shadow: 0 12px 24px rgba(0,0,0,0.4);
    }
    80% {
        transform: scale(0.95) rotateZ(360deg);
        box-shadow: 0 6px 12px rgba(0,0,0,0.3);
    }
    100% {
        transform: scale(1) rotateZ(360deg);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
}

/* Keyframes para efecto de brillo - SUAVIZADO */
@keyframes diceGlow {
    0%, 100% {
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        filter: brightness(1); /* Sin cambios de brillo molestos */
    }
    50% {
        box-shadow: 0 0 15px rgba(102, 126, 234, 0.6), 0 0 30px rgba(102, 126, 234, 0.4), 0 4px 8px rgba(0,0,0,0.2);
        filter: brightness(1.05); /* Reducido de 1.2 a 1.05 */
    }
}

/* Keyframes para vibración del contenedor */
@keyframes containerShake {
    0%, 100% {
        transform: translateX(0) translateY(0);
    }
    10% {
        transform: translateX(-2px) translateY(-1px);
    }
    20% {
        transform: translateX(2px) translateY(1px);
    }
    30% {
        transform: translateX(-1px) translateY(-2px);
    }
    40% {
        transform: translateX(1px) translateY(2px);
    }
    50% {
        transform: translateX(-2px) translateY(1px);
    }
    60% {
        transform: translateX(2px) translateY(-1px);
    }
    70% {
        transform: translateX(-1px) translateY(2px);
    }
    80% {
        transform: translateX(1px) translateY(-2px);
    }
    90% {
        transform: translateX(-1px) translateY(1px);
    }
}

/* Keyframes para efecto de números borrosos durante el giro */
@keyframes numberBlur {
    0% {
        filter: blur(0px);
        opacity: 1;
    }
    50% {
        filter: blur(2px);
        opacity: 0.7;
    }
    100% {
        filter: blur(0px);
        opacity: 1;
    }
}

/* Keyframes para ondas de impacto del dado - OPTIMIZADO */
@keyframes rippleExpand {
    0% {
        width: 15px;
        height: 15px;
        opacity: 0.6;
        border-width: 1px;
    }
    100% {
        width: 80px; /* Reducido de 120px */
        height: 80px; /* Reducido de 120px */
        opacity: 0;
        border-width: 0.5px;
    }
}

/* Keyframes para partículas de celebración */
@keyframes celebrationFloat {
    0% {
        transform: translate(-50%, -50%) rotate(var(--angle)) translateY(0) scale(0);
        opacity: 1;
    }
    50% {
        transform: translate(-50%, -50%) rotate(var(--angle)) translateY(-40px) scale(1);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) rotate(var(--angle)) translateY(-80px) scale(0.5);
        opacity: 0;
    }
}

/* Keyframes para efectos de sonido visual */
@keyframes soundEffectFloat {
    0% {
        transform: translateY(0) scale(0.5) rotate(0deg);
        opacity: 0.8;
    }
    50% {
        transform: translateY(-20px) scale(1) rotate(180deg);
        opacity: 1;
    }
    100% {
        transform: translateY(-40px) scale(0.3) rotate(360deg);
        opacity: 0;
    }
}

/* Keyframes para mensajes de suspense */
@keyframes messageFloat {
    0% {
        transform: translateX(-50%) translateY(0) scale(0);
        opacity: 0;
    }
    20% {
        transform: translateX(-50%) translateY(-10px) scale(1);
        opacity: 1;
    }
    80% {
        transform: translateX(-50%) translateY(-15px) scale(1);
        opacity: 1;
    }
    100% {
        transform: translateX(-50%) translateY(-25px) scale(0.8);
        opacity: 0;
    }
}

/* Animaciones de fichas en el tablero */
.player-token.moving {
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.player-token.bounce {
    animation: bounce 0.5s ease;
}

/* Animaciones de preguntas */
.question-modal.show {
    animation: fadeIn 0.4s ease-out;
}

.answer-btn {
    animation: slideInFromLeft 0.4s ease-out;
}

.answer-btn:nth-child(1) { animation-delay: 0.1s; }
.answer-btn:nth-child(2) { animation-delay: 0.2s; }
.answer-btn:nth-child(3) { animation-delay: 0.3s; }
.answer-btn:nth-child(4) { animation-delay: 0.4s; }

.answer-btn.correct {
    animation: pulse 0.6s ease-in-out, glow 1s ease-in-out;
}

.answer-btn.incorrect {
    animation: shake 0.5s ease-in-out;
}

/* Animación del temporizador */
.timer-bar:after {
    animation: timer-countdown linear;
}

@keyframes timer-countdown {
    from {
        width: 100%;
    }
    to {
        width: 0%;
    }
}

/* Animaciones de cuñas */
.wedge.collected {
    animation: glow 0.8s ease-out, bounce 0.6s ease 0.2s;
}

.wedge.new-collected {
    animation: pulse 1s ease-in-out infinite;
}

/* Animaciones de jugador activo */
.player-info.active {
    animation: glow 2s ease-in-out infinite;
}

.current-player-info {
    animation: slideInFromRight 0.6s ease-out;
}

/* Animaciones de resultados */
.result-icon.success {
    animation: bounce 0.8s ease, pulse 1.5s ease-in-out infinite 1s;
}

.result-icon.error {
    animation: shake 0.6s ease;
}

/* Animaciones del tutorial */
.tutorial-step {
    animation: fadeIn 0.5s ease-out;
}

.categories-preview .category {
    animation: slideInFromLeft 0.6s ease-out;
}

.categories-preview .category:nth-child(1) { animation-delay: 0.1s; }
.categories-preview .category:nth-child(2) { animation-delay: 0.2s; }
.categories-preview .category:nth-child(3) { animation-delay: 0.3s; }
.categories-preview .category:nth-child(4) { animation-delay: 0.4s; }
.categories-preview .category:nth-child(5) { animation-delay: 0.5s; }
.categories-preview .category:nth-child(6) { animation-delay: 0.6s; }

/* Animaciones del tablero */
.board-container {
    animation: fadeIn 1s ease-out;
}

/* Animaciones del historial de preguntas */
.history-question {
    animation: slideInLeft 0.3s ease-out;
}

.history-question.new {
    animation: slideInLeft 0.3s ease-out, highlight 1s ease-out;
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes highlight {
    0%, 100% {
        background-color: transparent;
    }
    50% {
        background-color: rgba(102, 126, 234, 0.2);
    }
}

/* Hover effects con animaciones - Removido para evitar conflicto con transitions */
/* La animación de hover ahora se maneja completamente en styles.css */

.player-token:hover {
    animation: bounce 0.4s ease;
}

/* Animaciones de carga */
@keyframes loading {
    0%, 100% {
        opacity: 0.3;
    }
    50% {
        opacity: 1;
    }
}

.loading {
    animation: loading 1.5s ease-in-out infinite;
}

/* Animación de aparición de modales */
.modal.active {
    animation: fadeIn 0.3s ease-out;
}

.modal.active .modal-content {
    animation: slideInFromBottom 0.4s ease-out;
}

@keyframes slideInFromBottom {
    from {
        opacity: 0;
        transform: translateY(50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Efectos de partículas para celebraciones */
@keyframes confetti {
    0% {
        transform: translateY(0) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100dvh) rotate(720deg);
        opacity: 0;
    }
}

.confetti {
    position: fixed;
    width: 10px;
    height: 10px;
    background: var(--primary-color);
    animation: confetti 3s linear infinite;
}

.confetti:nth-child(odd) {
    background: var(--accent-color);
    animation-delay: -0.5s;
}

.confetti:nth-child(3n) {
    background: var(--success-color);
    animation-delay: -1s;
}

/* Animación de escritura para el texto */
@keyframes typewriter {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

.typewriter {
    overflow: hidden;
    border-right: 2px solid var(--primary-color);
    animation: typewriter 2s steps(40) 1s forwards, blink 1s step-end infinite 3s;
}

@keyframes blink {
    0%, 50% {
        border-color: var(--primary-color);
    }
    51%, 100% {
        border-color: transparent;
    }
}

/* Animaciones responsivas - reducir en dispositivos móviles */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* Animaciones específicas para dispositivos táctiles */
@media (hover: none) {
    .btn:hover {
        animation: none;
    }
    
    .player-token:hover {
        animation: none;
    }
}

/* === ANIMACIONES DEL MODO DESAFÍO === */

/* Animación de entrada del temporizador */
@keyframes glow {
    from { 
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3); 
    }
    to { 
        box-shadow: 0 4px 20px rgba(102, 126, 234, 0.6); 
    }
}

/* Animaciones para respuestas correctas e incorrectas */
@keyframes correctAnswer {
    0% { 
        transform: scale(1); 
    }
    50% { 
        transform: scale(1.05); 
    }
    100% { 
        transform: scale(1); 
    }
}

@keyframes incorrectAnswer {
    0% { 
        transform: translateX(0); 
    }
    25% { 
        transform: translateX(-5px); 
    }
    75% { 
        transform: translateX(5px); 
    }
    100% { 
        transform: translateX(0); 
    }
}

/* Animación de carga con fadeInUp */
@keyframes fadeInUp {
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

/* === ANIMACIONES DE SUPERVIVENCIA === */

/* Pulso de supervivencia */
@keyframes survivePulse {
    0%, 100% { 
        opacity: 1; 
    }
    50% { 
        opacity: 0.7; 
    }
}

/* Flash de muerte */
@keyframes deathFlash {
    0% { 
        opacity: 1; 
        transform: scale(1); 
    }
    50% { 
        opacity: 0.5; 
        transform: scale(1.1); 
    }
    100% { 
        opacity: 1; 
        transform: scale(1); 
    }
}

/* Título de Game Over */
@keyframes gameOverTitle {
    0% { 
        opacity: 0; 
        transform: scale(0.5);
    }
    50% { 
        opacity: 1; 
        transform: scale(1.2);
    }
    100% { 
        opacity: 1; 
        transform: scale(1);
    }
}

/* Entrada del modal de Game Over */
@keyframes gameOverEnter {
    0% {
        opacity: 0;
        transform: scale(0.8);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

/* === ANIMACIONES DE ESTADÍSTICAS === */

/* Pulso de estadísticas */
@keyframes statPulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
}

/* Resaltado de nuevas estadísticas */
@keyframes highlight {
    0%, 100% {
        background-color: transparent;
    }
    50% {
        background-color: rgba(102, 126, 234, 0.2);
    }
}

/* Deslizamiento desde la izquierda */
@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* === ANIMACIONES DE TABLERO === */

/* Indicador de aparición del tablero */
@keyframes boardIndicatorFadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

/* Giro de traducción del tablero */
@keyframes boardTranslationSpin {
    to {
        transform: rotate(360deg);
    }
}

/* Puntos de traducción del tablero */
@keyframes boardTranslationDots {
    0%, 80%, 100% {
        transform: scale(0);
        opacity: 0.5;
    }
    40% {
        transform: scale(1);
        opacity: 1;
    }
}

/* Pulso de estado pendiente del tablero */
@keyframes boardPendingPulse {
    0%, 100% {
        transform: translateX(-50%) scale(1);
    }
    50% {
        transform: translateX(-50%) scale(1.05);
    }
}

/* Rebote de estado pendiente del tablero */
@keyframes boardPendingBounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateX(-50%) translateY(0);
    }
    40% {
        transform: translateX(-50%) translateY(-10px);
    }
    60% {
        transform: translateX(-50%) translateY(-5px);
    }
}

/* Pulso de inicio del tablero */
@keyframes boardStartPulse {
    0%, 100% {
        transform: translate(-50%, -50%) scale(1);
    }
    50% {
        transform: translate(-50%, -50%) scale(1.02);
    }
}

/* Rebote de inicio del tablero */
@keyframes boardStartBounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-5px);
    }
    60% {
        transform: translateY(-3px);
    }
}

/* Pulso del botón de inicio del tablero */
@keyframes boardStartButtonPulse {
    0%, 100% {
        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
    }
    50% {
        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
    }
}

/* === ANIMACIONES DE DADO MEJORADAS === */

/* Pulso de cuenta regresiva del dado */
@keyframes diceCountdownPulse {
    0%, 100% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.05);
        opacity: 0.8;
    }
}

/* Giro complejo del dado */
@keyframes diceRollSuspense {
    0% {
        transform: rotateX(0) rotateY(0);
    }
    25% {
        transform: rotateX(180deg) rotateY(180deg) scale(1.1);
    }
    50% {
        transform: rotateX(360deg) rotateY(360deg) scale(0.9);
    }
    75% {
        transform: rotateX(540deg) rotateY(540deg) scale(1.1);
    }
    100% {
        transform: rotateX(720deg) rotateY(720deg) scale(1);
    }
}

/* Aterrizaje del dado */
@keyframes diceLanded {
    0% {
        transform: scale(1.2);
    }
    50% {
        transform: scale(0.8);
    }
    100% {
        transform: scale(1);
    }
}

/* Brillo del dado */
@keyframes diceGlow {
    0%, 100% {
        box-shadow: 0 0 5px rgba(102, 126, 234, 0.3);
    }
    50% {
        box-shadow: 0 0 20px rgba(102, 126, 234, 0.8);
    }
}

/* Vibración del contenedor del dado */
@keyframes containerShake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-2px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(2px);
    }
}

/* === ANIMACIONES DE CARGA === */

/* Giro de carga adicional */
@keyframes spin {
    0% { 
        transform: rotate(0deg); 
    }
    100% { 
        transform: rotate(360deg); 
    }
}

/* Pulso de opacidad para elementos de carga */
@keyframes pulseOpacity {
    0%, 100% { 
        opacity: 1; 
    }
    50% { 
        opacity: 0.7; 
    }
}

/* === ANIMACIONES DE MOVIMIENTO === */

/* Anticipación del movimiento del tablero */
@keyframes boardAnticipation {
    0%, 100% {
        transform: scale(1);
    }
    25% {
        transform: scale(1.001);
    }
    50% {
        transform: scale(1.002);
    }
    75% {
        transform: scale(1.001);
    }
}

/* Pulso de countdown activo */
.dice.countdown-active {
    animation: diceCountdownPulse 1s ease-in-out infinite;
}

/* Aplicación de la animación de anticipación del tablero */
.board-container.preparing-movement {
    animation: boardAnticipation 2s ease-in-out;
}

/* === OPTIMIZACIÓN PARA PERFORMANCE === */

/* Clases para optimización de animaciones */
.will-change-transform {
    will-change: transform;
}

.will-change-opacity {
    will-change: opacity;
}

.will-change-all {
    will-change: transform, opacity, box-shadow;
}
